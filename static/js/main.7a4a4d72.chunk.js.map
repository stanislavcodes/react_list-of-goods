{"version":3,"sources":["App.tsx","components/GoodsList/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","state","isReversed","sortType","NONE","handleReset","setState","handleReverse","handleSort","this","visibleGoods","sort","goodOne","goodTwo","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","isAbleToReset","className","type","classNames","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAqBKA,E,+FCfQC,EAAuB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrC,OACE,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SDFnBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAMM,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUT,EAASU,MAHvB,EAMEC,YAAc,WACZ,EAAKC,SAAS,CACZJ,YAAY,EACZC,SAAUT,EAASU,QATzB,EAaEG,cAAgB,WACd,EAAKD,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBAfzB,EAmBEM,WAAa,SAACL,GACZ,EAAKG,SAAS,CAAEH,cApBpB,4CAuBE,WAAU,IAAD,OACP,EAAiCM,KAAKR,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdO,EAxDH,SACLd,EADK,GAGJ,IADCO,EACF,EADEA,SAAUD,EACZ,EADYA,WAENQ,EAAY,YAAOd,GAmBzB,OAjBAc,EAAaC,MAAK,SAACC,EAASC,GAC1B,OAAQV,GACN,KAAKT,EAASoB,SACZ,OAAOF,EAAQG,cAAcF,GAE/B,KAAKnB,EAASsB,OACZ,OAAOJ,EAAQK,OAASJ,EAAQI,OAElC,QACE,OAAO,MAITf,GACFQ,EAAaQ,UAGRR,EAiCgBS,CAAkBpB,EAAiBU,KAAKR,OACvDmB,EAAgBlB,GAAcC,IAAaT,EAASU,KAE1D,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYpB,IAAaT,EAASoB,WAEtCU,QAAS,kBAAM,EAAKhB,WAAWd,EAASoB,WAN1C,iCAWA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYpB,IAAaT,EAASsB,SAEtCQ,QAAS,kBAAM,EAAKhB,WAAWd,EAASsB,SAN1C,4BAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAarB,IAEjBsB,QAASf,KAAKF,cANhB,qBAYGa,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKJ,YAHhB,sBAWN,cAAC,EAAD,CAAWT,MAAOc,WA7E1B,GAAyBe,aE5DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7a4a4d72.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodOne, goodTwo) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return goodOne.localeCompare(goodTwo);\n\n      case SortType.LENGTH:\n        return goodOne.length - goodTwo.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  handleReverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleSort = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n    const isAbleToReset = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => this.handleSort(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => this.handleSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {\n            (isAbleToReset) && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.handleReset}\n              >\n                Reset\n              </button>\n            )\n          }\n        </div>\n\n        <GoodsList goods={visibleGoods} />\n      </div>\n    );\n  }\n}\n","import { FC } from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map((good) => (\n        <li data-cy=\"Good\" key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}